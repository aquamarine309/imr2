import { DC } from "@/core/constants";

export const gameElements = [
  {
    id: 1,
    description: () => i18n.t("game_element_1_description"),
    cost: DC.D5E8,
    position: [0, 0]
  },
  {
    id: 2,
    description: () => i18n.t("game_element_2_description", { value: formatPercents(0.25, 0) }),
    effect: 0.75,
    cost: DC.D2_5E12,
    position: [0, 17],
  },
  {
    id: 3,
    description: () => i18n.t("game_element_3_description"),
    effect: () => overflow(Softcap.dilation(Particles.electron.power.add(1).sqrt(), DC.EE4, DC.D0_9), DC.EE100, DC.D0_25),
    formatEffect: value => formatX(value),
    cost: DC.E15,
    position: [1, 0]
  },
  {
    id: 4,
    description: () => i18n.t("game_element_4_description"),
    effect: () => Softcap.power(Particles.proton.power.max(1).log10().pow(0.8).div(50).add(1), DC.E45, DC.D0_1),
    formatEffect: value => `${formatX(value)} stronger`,
    cost: DC.D2_5E16,
    position: [1, 1],
  },
  {
    id: 5,
    description: () => i18n.t("game_element_5_description"),
    effect: DC.D2,
    cost: DC.E18,
    position: [1, 12],
  },
  {
    id: 6,
    description: () => i18n.t("game_element_6_description", { value: formatPercents(0.01, 0) }),
    effect: () => {
      let total = DC.D0;
      for (const challenge of Challenges.all) {
        total = total.add(challenge.completions.times(challenge.id > 4 ? 2 : 1));
      }
      total = total.timesEffectOf(GameElement(7));
      return total.div(100).add(1);
    },
    formatEffect: value => formatX(value),
    cost: DC.D5E18,
    position: [1, 13],
  },
  {
    id: 7,
    description: () => i18n.t("game_element_7_description"),
    effect: () => player.elements.size.toDecimal().powEffectOf(GameElement(11)),
    formatEffect: value => formatX(value),
    cost: DC.E20,
    position: [1, 14],
  },
  {
    id: 8,
    description: () => i18n.t("game_element_8_description", { value: formatPercents(0.75, 0) }),
    effect: DC.D0_25,
    cost: DC.E21,
    position: [1, 15],
  },
  {
    id: 9,
    description: () => i18n.t("game_element_9_description", { value: formatPercents(0.15, 0) }),
    effect: 0.85,
    cost: DC.D6_5E21,
    position: [1, 16],
  },
  {
    id: 10,
    description: () => i18n.t("game_element_10_description"),
    cost: DC.E24,
    effect: 0.95,
    position: [1, 17],
  },
  {
    id: 11,
    description: () => i18n.t("game_element_11_description"),
    effect: 2,
    cost: DC.E27,
    position: [2, 0],
  },
  {
    id: 12,
    description: () => i18n.t("game_element_12_description"),
    cost: DC.E29,
    position: [2, 1],
  },
  {
    id: 13,
    description: () => i18n.t("game_element_13_description", { value: formatInt(2) }),
    effect: () => Challenge(7).completions.times(2),
    formatEffect: value => formatPlus(value, 0),
    cost: DC.D2_5E30,
    position: [2, 12],
  },
  {
    id: 14,
    description: () => i18n.t("game_element_14_description", { value: formatPercents(0.05, 0) }),
    cost: DC.E33,
    position: [2, 13],
  },
  {
    id: 15,
    description: () => i18n.t("game_element_15_description", { value: formatPercents(0.2, 0) }),
    effect: 0.8,
    cost: DC.E34,
    position: [2, 14],
  },
  {
    id: 16,
    description: () => i18n.t("game_element_16_description", { value: formatPercents(0.02, 0) }),
    effect: () => player.elements.size * 0.02,
    formatEffect: value => `+${formatPercents(value, 0)}`,
    cost: DC.D5E38,
    position: [2, 15],
  },
  {
    id: 17,
    description: () => i18n.t("game_element_17_description", { value: format(1.1, 1) }),
    effect: 1.1,
    cost: DC.E40,
    position: [2, 16],
  },
  {
    id: 18,
    description: () => i18n.t("game_element_18_description"),
    effect: () => MassUpgrade.cosmicRay.boughtAmount.pow(0.35).times(0.01).add(1),
    formatEffect: value => formatPow(value),
    cost: DC.E44,
    position: [2, 17],
  },
  {
    id: 19,
    description: () => i18n.t("game_element_19_description"),
    effect: 2.75,
    cost: DC.E50,
    position: [3, 0],
  },
  {
    id: 20,
    description: () => i18n.t("game_element_20_description", { value: formatInt(50) }),
    effect: 50,
    cost: DC.E53,
    position: [3, 1],
  },
  {
    id: 21,
    description: () => i18n.t("game_element_21_description"),
    cost: DC.E56,
    position: [3, 2],
  },
  {
    id: 22,
    description: () => i18n.t("game_element_22_description"),
    effect: () => DC.D1_25.pow(MassUpgrade.tickspeed.boughtAmount.pow(0.55)),
    formatEffect: value => formatX(value),
    cost: DC.E61,
    position: [3, 3],
  },
  {
    id: 23,
    description: () => i18n.t("game_element_23_description"),
    effect: DC.D1_5,
    cost: DC.E65,
    position: [3, 4],
  },
  {
    id: 24,
    description: () => i18n.t("game_element_24_description", { value: formatPercents(1, 0) }),
    effect: () => Currency.atomicPower.value.max(1).log10().add(1).pow(0.4),
    formatEffect: value => formatX(value),
    cost: DC.E75,
    position: [3, 5],
  },
  {
    id: 25,
    description: () => i18n.t("game_element_25_description", { value: formatInt(1) }),
    effect: DC.D1,
    cost: DC.E80,
    position: [3, 6],
  },
  {
    id: 26,
    description: () => i18n.t("game_element_26_description"),
    effect: () => DC.D0_99.pow(Softcap.power(player.elements.size.toDecimal(), DC.D30, DC.C2D3)),
    formatEffect: value => i18n.t("X_weaker", { value: formatPercents(DC.D1.minus(value)) }),
    cost: DC.E85,
    position: [3, 7],
  },
  {
    id: 27,
    description: () => i18n.t("game_element_27_description", { value: formatPercents(0.25, 0) }),
    effect: 0.75,
    cost: DC.E90,
    position: [3, 8],
  },
  {
    id: 28,
    description: () => i18n.t("game_element_28_description", { value: format(1.5, 1) }),
    effect: 1.5,
    cost: DC.E97,
    position: [3, 9],
  },
  {
    id: 29,
    description: () => i18n.t("game_element_29_description"),
    cost: DC.E100,
    position: [3, 10],
  },
  {
    id: 30,
    description: () => i18n.t("game_element_30_description", { value: formatPercents(0.1, 0) }),
    cost: DC.E107,
    position: [3, 11],
  },
  {
    id: 31,
    description: () => i18n.t("game_element_31_description"),
    effect: () => Softcap.dilation(Currency.dilatedMass.value.add(1).pow(0.0125), DC.EE27, DC.D0_95),
    formatEffect: value => formatX(value),
    cost: DC.E130,
    position: [3, 12],
  },
  {
    id: 32,
    description: () => i18n.t("game_element_32_description", { value: formatPercents(0.05, 0) }),
    effect: 1.05,
    cost: DC.E140,
    position: [3, 13],
  },
  {
    id: 33,
    description: () => i18n.t("game_element_33_description", { value: formatInt(50) }),
    effect: DC.D50,
    cost: DC.E150,
    position: [3, 14],
  },
  {
    id: 34,
    description: () => i18n.t("game_element_34_description"),
    effect: () => Currency.ragePowers.value.max(1).log10().add(1).pow(DC.D0_75),
    formatEffect: value => formatX(value),
    cost: DC.E175,
    position: [3, 15],
  },
  {
    id: 35,
    description: () => i18n.t("game_element_35_description"),
    effect: () => BlackHole.mass.max(1).log10().add(1).pow(DC.D0_8),
    formatEffect: value => formatX(value),
    cost: DC.E210,
    position: [3, 16],
  },
  {
    id: 36,
    description: () => i18n.t("game_element_36_description"),
    cost: DC.E225,
    position: [3, 17],
  },
  {
    id: 37,
    description: () => i18n.t("game_element_37_description"),
    effect: () => DC.D0_9.pow(Softcap.power(RankType.tetr.amount, DC.D6, DC.D0_5)),
    formatEffect: value => i18n.t("X_weaker", { value: formatPercents(DC.D1.minus(value)) }),
    cost: DC.E245,
    position: [4, 0],
  },
  {
    id: 38,
    description: () => i18n.t("game_element_38_description"),
    effect: () => MassUpgrade.tickspeed.freeAmount.div(6).floor(),
    formatEffect: value => `${formatPlus(value, 0)} to Rage Power Upgrade 7`,
    cost: DC.E260,
    position: [4, 1],
  },
  {
    id: 39,
    description: () => i18n.t("game_element_39_description"),
    cost: DC.E285,
    position: [4, 2],
  },
  {
    id: 40,
    description: () => i18n.t("game_element_40_description"),
    effect: () => Softcap.dilation(Currency.stars.value.add(1).sqrt(), DC.E4E66, DC.D0_95),
    formatEffect: value => formatX(value),
    cost: DC.E303,
    position: [4, 3],
  },
  {
    id: 41,
    description: () => i18n.t("game_element_41_description", { value: formatInt(50) }),
    effect: DC.D50,
    cost: DC.E315,
    position: [4, 4],
  },
  {
    id: 42,
    description: () => i18n.t("game_element_42_description"),
    effect: () => overflow(overflow(Currency.stars.value.add(1).cbrt(), DC.E112, DC.D0_5), DC.E5E4, DC.D0_1),
    formatEffect: value => formatX(value),
    cost: DC.E325,
    position: [4, 5],
  },
  {
    id: 43,
    description: () => i18n.t("game_element_43_description"),
    cost: DC.E360,
    position: [4, 6],
  },
  {
    id: 44,
    description: () => i18n.t("game_element_44_description"),
    effect: DC.D1_75,
    cost: DC.E380,
    position: [4, 7],
  },
  {
    id: 45,
    description: () => i18n.t("game_element_45_description"),
    effect: () => Currency.stars.value.add(1).pow(0.15).clampMax(DC.E20),
    cap: DC.E20,
    formatEffect: value => formatX(value),
    cost: DC.E420,
    position: [4, 8],
  },
  {
    id: 46,
    description: () => i18n.t("game_element_46_description"),
    effect: () => Stars.boost.add(1).pow(0.02),
    formatEffect: value => formatX(value),
    cost: DC.E510,
    position: [4, 9],
  },
  {
    id: 47,
    description: () => i18n.t("game_element_47_description", { value: format(1.05, 2) }),
    effect: 1.1,
    cost: DC.E610,
    position: [4, 10],
  },
  {
    id: 48,
    description: () => i18n.t("game_element_48_description", { value: formatPercents(0.1, 0) }),
    effect: DC.D1_1,
    cost: DC.E800,
    position: [4, 11],
  },
  {
    id: 49,
    description: () => i18n.t("game_element_49_description"),
    effect: () => Currency.stars.value.add(1).log10().add(1).pow(1.1),
    formatEffect: value => formatX(value),
    cost: DC.E1000,
    position: [4, 12],
  },
  {
    id: 50,
    description: () => i18n.t("game_element_50_description", { value: formatPow(1.05, 2) }),
    effect: 1.05,
    cost: DC.E1750,
    position: [4, 13],
  },
  {
    id: 51,
    description: () => i18n.t("game_element_51_description", { value: formatPercents(0.1, 0) }),
    effect: 0.9,
    cost: DC.E2400,
    position: [4, 14],
  },
  {
    id: 52,
    description: () => i18n.t("game_element_52_description"),
    effect: () => dilatedValue(BlackHole.mass.add(1), DC.D0_6),
    formatEffect: value => formatX(value),
    cost: DC.E2800,
    position: [4, 15],
  },
  {
    id: 53,
    description: () => i18n.t("game_element_53_description", { value: formatPercents(0.75, 0) }),
    effect: 1.75,
    cost: DC.E4600,
    position: [4, 16],
  },
  {
    id: 54,
    description: () => i18n.t("game_element_54_description"),
    effect: () => Currency.mass.value.add(1).log10().sqrt(),
    formatEffect: value => formatX(value),
    cost: DC.E5200,
    position: [4, 17],
  },
  {
    id: 55,
    description: () => i18n.t("game_element_55_description", { value: formatPercents(0.25, 0) }),
    effect: DC.D0_75,
    cost: DC.E1_6E4,
    position: [5, 0],
  },
  {
    id: 56,
    description: () => i18n.t("game_element_56_description", { value: formatInt(200) }),
    effect: DC.D200,
    cost: DC.E2_2E4,
    position: [5, 1],
  },
  {
    id: 57,
    description: () => i18n.t("game_element_57_description"),
    effect: () => MassUpgrade.tickspeed.power.max(1).log10().div(10).max(1).powEffectOf(GameElement(66)),
    formatEffect: value => formatX(value),
    cost: DC.E3_6E4,
    position: [8, 2],
  },
  {
    id: 58,
    description: () => i18n.t("game_element_58_description"),
    effect: () => DC.D0_975.pow(RankType.tier.amount.sqrt()),
    formatEffect: value => i18n.t("X_weaker", { value: formatPercents(DC.D1.minus(value)) }),
    cost: DC.E5_7E4,
    position: [8, 3],
  },
  {
    id: 59,
    description: () => i18n.t("game_element_59_description", { value: format(DC.D0_45, 2) }),
    effect: DC.D0_45,
    cost: DC.E6_6E4,
    position: [8, 4],
  },
  {
    id: 60,
    description: () => i18n.t("game_element_60_description", { value: formatInt(100) }),
    effect: DC.E2,
    cost: DC.E7_7E4,
    position: [8, 5],
  },
  {
    id: 61,
    description: () => i18n.t("game_element_61_description", { value: formatPow(DC.D0_5, 1) }),
    cost: DC.E1_5E5,
    position: [8, 6],
  },
  {
    id: 62,
    description: () => i18n.t("game_element_62_description", { value: formatInt(3) }),
    effect: () => Currency.supernova.value.times(3),
    formatEffect: value => i18n.t("X_later", { value }),
    cost: DC.E2_5E5,
    position: [8, 7],
  },
  {
    id: 63,
    description: () => i18n.t("game_element_63_description", { value: formatX(DC.D25, 0) }),
    effect: DC.D25,
    cost: DC.E3E5,
    position: [8, 8],
  },
  {
    id: 64,
    description: () => i18n.t("game_element_64_description", { value: formatPercents(DC.D0_5, 0) }),
    effect: DC.D1_5,
    cost: DC.E5E5,
    position: [8, 9],
  },
  {
    id: 65,
    description: () => i18n.t("game_element_65_description", { value: formatInt(200) }),
    effect: DC.D200,
    cost: DC.E8E5,
    position: [8, 10],
  },
  {
    id: 66,
    description: () => i18n.t("game_element_66_description"),
    effect: 2,
    cost: DC.E1_1E6,
    position: [8, 11],
  },
  {
    id: 67,
    description: () => i18n.t("game_element_67_description"),
    effect: () => {
      let effect = Currency.stars.value;
      effect = Softcap.dilation(effect, DC.E3E15, DC.D0_85);
      effect = overflow(effect, DC.EE100, DC.D0_5);
      effect = overflow(effect, DC.EE50000, DC.D0_15);
      return effect;
    },
    formatEffect: value => formatX(value),
    softcapped: value => value.gte(DC.E3E15),
    cost: DC.E1_7E6,
    position: [8, 12],
  },
  {
    id: 68,
    description: () => `Meta-tickspeed starts ${formatX(2, 0)} later`,
    effect: DC.D2,
    cost: DC.E4_8E6,
    position: [8, 13],
  },
  {
    id: 69,
    description: () => `Pent is now added in mass gain formula from collapsed stars.`,
    cost: DC.E3_6E7,
    position: [8, 14],
  },
  {
    id: 70,
    description: () => `Add ${formatInt(200)} more C7 & C8 maximum completions.`,
    effect: DC.D200,
    cost: DC.E6_9E7,
    position: [8, 15],
  },
  {
    id: 71,
    description: () => `BH formula softcap starts laster based on Supernovas.`,
    effect: () => Currency.supernova.value.add(1).pow(DC.D0_25),
    formatEffect: value => formatPow(value),
    cost: DC.E1_6E8,
    position: [8, 16],
  },
  {
    id: 72,
    description: () => `Tetrs are ${formatPercents(0.15, 0)} cheaper.`,
    effect: 0.85,
    cost: DC.E5_75E8,
    position: [5, 3],
  },
  {
    id: 73,
    description: () => `Add more C5-6 & C8 maximum completions based on Supernovas.`,
    effect: () => Currency.supernova.value.times(5),
    formatEffect: value => formatPlus(value),
    cost: DC.E1_3E9,
    position: [5, 4],
  },
  {
    id: 74,
    description: () => `Super Tetr scales ${formatPercents(0.25, 0)} weaker.`,
    effect: 0.75,
    cost: DC.E2_6E9,
    position: [5, 5],
  },
  {
    id: 75,
    description: () => `Remove two softcaps from Atomic Power's effect.`,
    cost: DC.E3_9E9,
    position: [5, 6],
  },
  {
    id: 76,
    description: () => `Collapsed Star's effect is ${formatPercents(0.25, 0)} stronger.`,
    effect: 1.25,
    cost: DC.E3_75E10,
    position: [5, 7],
  },
  {
    id: 77,
    description: () => `Mass softcap^3 is ${formatPercents(0.175, 2)} weaker.`,
    effect: 0.825,
    cost: DC.E4E11,
    position: [5, 8],
  },
  {
    id: 78,
    position: [5, 9],
  },
  {
    id: 79,
    position: [5, 10],
  },
  {
    id: 80,
    position: [5, 11],
  },
  {
    id: 81,
    position: [5, 12],
  },
  {
    id: 82,
    position: [5, 13],
  },
  {
    id: 83,
    position: [5, 14],
  },
  {
    id: 84,
    position: [5, 15],
  },
  {
    id: 85,
    position: [5, 16],
  },
  {
    id: 86,
    position: [5, 17],
  },
  {
    id: 87,
    position: [6, 0],
  },
  {
    id: 88,
    position: [6, 1],
  },
  {
    id: 89,
    position: [9, 2],
  },
  {
    id: 90,
    position: [9, 3],
  },
  {
    id: 91,
    position: [9, 4],
  },
  {
    id: 92,
    position: [9, 5],
  },
  {
    id: 93,
    position: [9, 6],
  },
  {
    id: 94,
    position: [9, 7],
  },
  {
    id: 95,
    position: [9, 8],
  },
  {
    id: 96,
    position: [9, 9],
  },
  {
    id: 97,
    position: [9, 10],
  },
  {
    id: 98,
    position: [9, 11],
  },
  {
    id: 99,
    position: [9, 12],
  },
  {
    id: 100,
    position: [9, 13],
  },
  {
    id: 101,
    position: [9, 14],
  },
  {
    id: 102,
    position: [9, 15],
  },
  {
    id: 103,
    position: [9, 16],
  },
  {
    id: 104,
    position: [6, 3],
  },
  {
    id: 105,
    position: [6, 4],
  },
  {
    id: 106,
    position: [6, 5],
  },
  {
    id: 107,
    position: [6, 6],
  },
  {
    id: 108,
    position: [6, 7],
  },
  {
    id: 109,
    position: [6, 8],
  },
  {
    id: 110,
    position: [6, 9],
  },
  {
    id: 111,
    position: [6, 10],
  },
  {
    id: 112,
    position: [6, 11],
  },
  {
    id: 113,
    position: [6, 12],
    effect: DC.D0_95
  },
  {
    id: 114,
    position: [6, 13],
  },
  {
    id: 115,
    position: [6, 14],
  },
  {
    id: 116,
    position: [6, 15],
  },
  {
    id: 117,
    position: [6, 16],
  },
  {
    id: 118,
    position: [6, 17],
  },
];